[{"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\Header\\Header.js":"3","C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\WeightGraph\\WeightGraph.js":"4","C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\WeightForm\\WeightForm.js":"5"},{"size":142,"mtime":1616576104000,"results":"6","hashOfConfig":"7"},{"size":600,"mtime":1629202206861,"results":"8","hashOfConfig":"7"},{"size":552,"mtime":1629194581820,"results":"9","hashOfConfig":"7"},{"size":1961,"mtime":1629267235569,"results":"10","hashOfConfig":"7"},{"size":1511,"mtime":1629202043935,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1xws7np",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\index.js",[],["24","25"],"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\Header\\Header.js",[],"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\WeightGraph\\WeightGraph.js",[],"C:\\Users\\hp\\Desktop\\React\\react-weight-tracker\\src\\components\\WeightForm\\WeightForm.js",["26"],"import React, { useState, useEffect } from 'react'\r\nimport classes from './WeightForm.module.css'\r\n\r\nfunction WeightForm(props) {\r\n\r\n    let [weightState, setWeightState] = useState([])\r\n\r\n    let date\r\n    let weight\r\n\r\n    function handleDateChange(event) {\r\n        date = event.target.value\r\n    }\r\n\r\n    function handleWeightChange(event) {\r\n        weight = event.target.value\r\n    }\r\n\r\n    function addData(event) {\r\n        event.preventDefault()\r\n        let newWeighObject = {}\r\n        if(date && weight) {\r\n            newWeighObject['date'] = date\r\n            newWeighObject['weight'] = weight\r\n            let newState = weightState.concat(newWeighObject)\r\n            setWeightState(newState)\r\n        }\r\n\r\n        weight = 0\r\n        date = undefined\r\n    }\r\n\r\n    useEffect(() => {\r\n        props.liftState(weightState)\r\n        //console.log(weightState)\r\n    }, [weightState])\r\n\r\n    return(\r\n        <form className = {classes.form} onSubmit = {addData}>\r\n            <label htmlFor=\"date-of-tracking\"  className = {classes.date}>Date of Tracking the Weight:</label>\r\n            <input type= \"date\" id=\"dot\" name=\"dot\" onChange = {handleDateChange} value = {date}/>\r\n            <label htmlFor=\"weight\" className = {classes.weight}>Weight (in Kilos)</label>\r\n            <input type= \"number\" min= \"0\" step= \"0.01\" onChange = {handleWeightChange} value = {weight}/>\r\n            <button className = {classes.submit}>Add Data</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default WeightForm",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":36,"column":8,"nodeType":"33","endLine":36,"endColumn":21,"suggestions":"34"},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["37"],"no-global-assign","no-unsafe-negation",{"desc":"38","fix":"39"},"Update the dependencies array to be: [props, weightState]",{"range":"40","text":"41"},[882,895],"[props, weightState]"]